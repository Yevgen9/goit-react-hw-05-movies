{"version":3,"file":"static/js/467.7ba092b2.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.scss?0e19","components/Cast/Cast.jsx","webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.scss?a435","components/Loader/Loader.jsx","components/service/Api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"actorItem\":\"Cast_actorItem__HKcO6\",\"castList\":\"Cast_castList__x9X45\",\"actorName\":\"Cast_actorName__l2CAE\",\"actorImg\":\"Cast_actorImg__hk44l\"};","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Loader from 'components/Loader/Loader';\n\n// import PropTypes from 'prop-types'\n\nimport { getMovieCastByFromApi } from '../../components/service/Api';\nimport NoActorPhoto from '../../images/no-user-icon.png';\nimport s from './Cast.module.scss';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n\n  const [cast, setCast] = useState(null);\n\n  const [showLoader, setShowLoader] = useState(false);\n\n  useEffect(() => {\n    setShowLoader(true);\n\n    getMovieCastByFromApi(movieId)\n      .then(data => {\n        // console.log(data);\n\n        if (data.cast.length === 0) {\n          return toast.error('Sorry, there is no cast!', {\n            position: 'top-center',\n            autoClose: 1500,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: 'dark',\n          });\n        }\n        setCast(data.cast);\n      })\n      .finally(() => setShowLoader(false));\n  }, [movieId]);\n\n  return (\n    <div>\n      {showLoader && <Loader />}\n\n      <ToastContainer />\n      {cast && (\n        <ul className={s.castList}>\n          {cast.map(actor => {\n            let actorPhoto = NoActorPhoto;\n            if (actor.profile_path) {\n              actorPhoto = `https://image.tmdb.org/t/p/w500${actor.profile_path}`;\n            }\n            return (\n              <li key={actor.id} className={s.actorItem}>\n                <img\n                  src={actorPhoto}\n                  alt={actor.name}\n                  className={s.actorImg}\n                  width=\"200\"\n                />\n                <p className={s.actorName}>{actor.name}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n\n      {/* {!cast && <p>There is no cast!</p>} */}\n    </div>\n  );\n}\n\n// Cast.propTypes = {\n\n// }\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__DwtSp\"};","import React from 'react';\n\nimport { RotatingLines } from 'react-loader-spinner';\nimport s from './Loader.module.scss';\n\nexport default function Loader() {\n  return (\n    <div className={s.loader}>\n      <RotatingLines\n        visible={true}\n        height=\"200\"\n        width=\"200\"\n        color=\"grey\"\n        strokeWidth=\"3\"\n        animationDuration=\"0.75\"\n        ariaLabel=\"rotating-lines-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n      />\n    </div>\n  );\n}\n","// const API_KEY = 'fa4880ecea295b97ec0c0697c04c04a1';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmYTQ4ODBlY2VhMjk1Yjk3ZWMwYzA2OTdjMDRjMDRhMSIsInN1YiI6IjY2MjhiZTk5Y2I2ZGI1MDBjYWFkNjYyMSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.dZiO4FGnOBDLSQeO81T0oCwzPEGAndYNnW-ORczZcxw',\n  },\n};\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\n// -- 1\n\n// export const getPopularMoviesFromApi = () => {\n//   const URL = `${BASE_URL}trending/all/day?language=en-US`;\n\n//   return fetch(URL, options)\n//     .then(response => response.json())\n\n//     .catch(err => console.error(err));\n// };\n\nexport const getPopularMoviesFromApi = () => {\n  const URL = `${BASE_URL}movie/popular?language=en-US`;\n\n  return fetch(URL, options)\n    .then(response => response.json())\n\n    .catch(err => console.error(err));\n};\n\n// -- 2\nexport const getMovieDetailsFromApi = movie_Id => {\n  const URL = `${BASE_URL}movie/${movie_Id}?language=en-US`;\n\n  return fetch(URL, options)\n    .then(response => response.json())\n    .catch(error => console.log(error));\n};\n\n// -- 3\nexport const getMovieByQueryFromApi = query => {\n  const URL = `${BASE_URL}search/movie?query=${query}&include_adult=false&language=en-US&page=1`;\n\n  return fetch(URL, options)\n    .then(response => response.json())\n    .catch(error => console.log(error));\n};\n\n// --4\nexport const getMovieCastByFromApi = movie_Id => {\n  const URL = `${BASE_URL}movie/${movie_Id}/credits`;\n\n  return fetch(URL, options)\n    .then(response => response.json())\n    .catch(error => console.log(error));\n};\n\n// -- 5\nexport const getMovieReviewsByFromApi = movie_Id => {\n  const URL = `${BASE_URL}movie/${movie_Id}/reviews`;\n\n  return fetch(URL, options)\n    .then(response => response.json())\n    .catch(error => console.log(error));\n};\n"],"names":["Cast","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","showLoader","setShowLoader","useEffect","getMovieCastByFromApi","then","data","length","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","finally","_jsxs","children","_jsx","Loader","ToastContainer","className","s","map","actor","actorPhoto","profile_path","concat","src","alt","name","width","id","RotatingLines","visible","height","color","strokeWidth","animationDuration","ariaLabel","wrapperStyle","wrapperClass","options","method","headers","accept","Authorization","BASE_URL","getPopularMoviesFromApi","URL","fetch","response","json","catch","err","console","error","getMovieDetailsFromApi","movie_Id","log","getMovieByQueryFromApi","query","getMovieReviewsByFromApi"],"sourceRoot":""}