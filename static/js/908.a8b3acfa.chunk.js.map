{"version":3,"file":"static/js/908.a8b3acfa.chunk.js","mappings":"kOACA,G,OAAA,CAAgB,KAAO,yBAAyB,WAAa,+BAA+B,MAAQ,4B,SCKrF,SAASA,EAAUC,GAAoB,IAAjBC,EAAYD,EAAZC,aACnCC,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GA+BtB,OACEI,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAc,KACfJ,EAAAA,EAAAA,MAAA,QAAMK,UAAWC,EAAAA,KAAQC,SA3BR,SAAAC,GAEnB,OADAA,EAAEC,iBACmB,KAAjBX,EAAMY,QAGRX,EAAS,IAEFY,EAAAA,GAAAA,KAAW,sBAAuB,CACvCC,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,WAIX3B,EAAaK,GAENC,EAAS,IAClB,EAKoDG,SAAA,EAC9CC,EAAAA,EAAAA,KAAA,UAAQE,UAAWC,EAAAA,WAAce,KAAK,SAAQnB,UAC5CC,EAAAA,EAAAA,KAAA,QAAME,UAAWC,EAAAA,YAAcJ,SAAC,cAGlCC,EAAAA,EAAAA,KAAA,SACEE,UAAWC,EAAAA,MACXe,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,eACZC,MAAO3B,EACP4B,SA5Ca,SAAAlB,GAEnBT,EAASS,EAAEmB,OAAOF,MACpB,SA8CF,C,+BCzDA,GAAiB,EC+DjB,EAtDe,WAEb,IAAA/B,GAA0CC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjDkC,EAAahC,EAAA,GAAEiC,EAAgBjC,EAAA,GAEtCkC,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAnC,EAAAA,EAAAA,GAAAiC,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BlC,EAAQmC,EAAaE,IAAI,SAE/BC,GAAoCzC,EAAAA,EAAAA,WAAS,GAAM0C,GAAAxC,EAAAA,EAAAA,GAAAuC,EAAA,GAA5CE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,IAEhCG,EAAAA,EAAAA,YAAU,WACJ1C,IACFyC,GAAc,IAEdE,EAAAA,EAAAA,IAAuB3C,GACpB4C,MAAK,SAAAC,GACJd,EAAiBc,EAAKC,QACxB,IACCC,SAAQ,kBAAMN,GAAc,EAAM,IAEzC,GAAG,CAACzC,IAwBJ,OACEE,EAAAA,EAAAA,MAAA,OAAKK,UAAWC,EAAAA,YAAcJ,SAAA,CAC3BoC,IAAcnC,EAAAA,EAAAA,KAAC2C,EAAAA,EAAM,KAEtB3C,EAAAA,EAAAA,KAAC4C,EAAAA,EAAK,CAACC,KAAK,mBACZ7C,EAAAA,EAAAA,KAACZ,EAAU,CAACE,aA3BS,SAAAwD,GACvBf,EAAgB,CAAEpC,MAAOmD,IAEzBV,GAAc,IAEdE,EAAAA,EAAAA,IAAuBQ,GACpBP,MAAK,SAAAC,GACJd,EAAiBc,EAAKC,QACxB,IACCC,SAAQ,kBAAMN,GAAc,EAAM,GACvC,IAkBKX,IAAiBzB,EAAAA,EAAAA,KAAC+C,EAAAA,EAAY,CAACtB,cAAeA,MAGrD,C,0EC7DA,EAAyB,uB,SCIV,SAASkB,IACtB,OACE3C,EAAAA,EAAAA,KAAA,OAAKE,UAAWC,EAASJ,UACvBC,EAAAA,EAAAA,KAACgD,EAAAA,GAAa,CACZC,SAAS,EACTC,OAAO,MACPC,MAAM,MACNC,MAAM,OACNC,YAAY,IACZC,kBAAkB,OAClBC,UAAU,yBACVC,aAAc,CAAC,EACfC,aAAa,MAIrB,C,kFCpBA,GAAgB,KAAO,2BAA2B,SAAW,+BAA+B,SAAW,+BAA+B,QAAU,8BAA8B,SAAW,gC,kBCM1K,SAASV,EAAY1D,GAAqB,IAAlBoC,EAAapC,EAAboC,cAG/BiC,GAAWC,EAAAA,EAAAA,MAGjB,OACE3D,EAAAA,EAAAA,KAAA,MAAIE,UAAWC,EAAAA,KAAOJ,SACnB0B,EAAcmC,KAAI,SAAAC,GACjB,IAAIC,EAAc,KAEhBA,EADED,EAAME,MACMF,EAAME,MAENF,EAAMG,KAGtB,IAAIC,EAASC,EAKb,OAJIL,EAAMM,cACRF,EAAM,kCAAAG,OAAqCP,EAAMM,eAIjDtE,EAAAA,EAAAA,MAAA,MAAIK,UAAWC,EAAAA,SAAWJ,SAAA,EACxBC,EAAAA,EAAAA,KAACqE,EAAAA,GAAI,CACHnE,UAAWC,EAAAA,SACXmE,GAAE,WAAAF,OAAaP,EAAMU,IACrBC,MAAO,CAAEC,KAAMf,GAAW3D,UAE1BC,EAAAA,EAAAA,KAAA,WAASE,UAAWC,EAAAA,SAAWJ,UAC7BC,EAAAA,EAAAA,KAAA,OACEE,UAAWC,EAAAA,QACXuE,IAAKT,EACLU,IAAKd,EAAMe,sBAKjB5E,EAAAA,EAAAA,KAAC6E,EAAAA,GAAO,CACN3E,UAAWC,EAAAA,SACXmE,GAAE,WAAAF,OAAaP,EAAMU,IACrBC,MAAO,CAAEC,KAAMf,GAAW3D,SAEzB+D,MApB2BD,EAAMU,GAwB1C,KAGN,C,iECvDA,EAAwB,qB,SCWxB,MARA,SAAclF,GAAY,IAATwD,EAAIxD,EAAJwD,KACf,OAAO7C,EAAAA,EAAAA,KAAA,MAAIE,UAAWC,EAAQJ,SAAE8C,GAClC,C,uJCJA,IAAMiC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIAC,EAAW,gCAaJC,EAA0B,WACrC,IAAMC,EAAG,GAAAjB,OAAMe,EAAQ,gCAEvB,OAAOG,MAAMD,EAAKP,GACfvC,MAAK,SAAAgD,GAAQ,OAAIA,EAASC,MAAM,IAEhCC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAI,GACpC,EAGaG,EAAyB,SAAAC,GACpC,IAAMT,EAAG,GAAAjB,OAAMe,EAAQ,UAAAf,OAAS0B,EAAQ,mBAExC,OAAOR,MAAMD,EAAKP,GACfvC,MAAK,SAAAgD,GAAQ,OAAIA,EAASC,MAAM,IAChCC,OAAM,SAAAG,GAAK,OAAID,QAAQI,IAAIH,EAAM,GACtC,EAGatD,EAAyB,SAAA3C,GACpC,IAAM0F,EAAG,GAAAjB,OAAMe,EAAQ,uBAAAf,OAAsBzE,EAAK,8CAElD,OAAO2F,MAAMD,EAAKP,GACfvC,MAAK,SAAAgD,GAAQ,OAAIA,EAASC,MAAM,IAChCC,OAAM,SAAAG,GAAK,OAAID,QAAQI,IAAIH,EAAM,GACtC,EAGaI,EAAwB,SAAAF,GACnC,IAAMT,EAAG,GAAAjB,OAAMe,EAAQ,UAAAf,OAAS0B,EAAQ,YAExC,OAAOR,MAAMD,EAAKP,GACfvC,MAAK,SAAAgD,GAAQ,OAAIA,EAASC,MAAM,IAChCC,OAAM,SAAAG,GAAK,OAAID,QAAQI,IAAIH,EAAM,GACtC,EAGaK,EAA2B,SAAAH,GACtC,IAAMT,EAAG,GAAAjB,OAAMe,EAAQ,UAAAf,OAAS0B,EAAQ,YAExC,OAAOR,MAAMD,EAAKP,GACfvC,MAAK,SAAAgD,GAAQ,OAAIA,EAASC,MAAM,IAChCC,OAAM,SAAAG,GAAK,OAAID,QAAQI,IAAIH,EAAM,GACtC,C","sources":["webpack://goit-react-hw-05-movies/./src/components/SearchForm/SearchForm.module.scss?5dd0","components/SearchForm/SearchForm.jsx","shared/styles/Movie.module.scss","Pages/Movies.jsx","webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.scss?a435","components/Loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/components/MoviesLayout/MoviesLayout.module.scss?245e","components/MoviesLayout/MoviesLayout.jsx","webpack://goit-react-hw-05-movies/./src/components/Title/Title.module.scss?ae23","components/Title/Title.jsx","components/service/Api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchForm_form__49W6b\",\"buttonForm\":\"SearchForm_buttonForm__WB01v\",\"input\":\"SearchForm_input__7U8V+\"};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport s from './SearchForm.module.scss';\n\nexport default function SearchForm({ onSubmitForm }) {\n  const [query, setQuery] = useState('');\n\n  const handleChange = e => {\n    // console.log(e.currentTarget.value);\n    setQuery(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') {\n      //   console.log('empty line');\n\n      setQuery('');\n\n      return toast.warn('Please, enter text!', {\n        position: 'top-center',\n        autoClose: 1000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: 'dark',\n      });\n    }\n\n    onSubmitForm(query);\n\n    return setQuery('');\n  };\n\n  return (\n    <>\n      <ToastContainer />\n      <form className={s.form} onSubmit={handleSubmit}>\n        <button className={s.buttonForm} type=\"submit\">\n          <span className={s.buttonLabel}>Search</span>\n        </button>\n\n        <input\n          className={s.input}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movie\"\n          value={query}\n          onChange={handleChange}\n        />\n      </form>\n    </>\n  );\n}\n\nSearchForm.propTypes = {\n  onSubmitForm: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {};","import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\n\nimport SearchForm from '../components/SearchForm/SearchForm';\nimport Title from '../components/Title/Title';\nimport { getMovieByQueryFromApi } from '../components/service/Api';\nimport MoviesLayout from 'components/MoviesLayout/MoviesLayout';\nimport s from '../shared/styles/Movie.module.scss';\n\nconst Movies = () => {\n  // const [query, setQuery] = useState(null);\n  const [arrayOfMovies, setArrayOfMovies] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  const [showLoader, setShowLoader] = useState(false);\n\n  useEffect(() => {\n    if (query) {\n      setShowLoader(true);\n\n      getMovieByQueryFromApi(query)\n        .then(data => {\n          setArrayOfMovies(data.results);\n        })\n        .finally(() => setShowLoader(false));\n    }\n  }, [query]);\n\n  const handleSubmitForm = result => {\n    setSearchParams({ query: result });\n\n    setShowLoader(true);\n\n    getMovieByQueryFromApi(result)\n      .then(data => {\n        setArrayOfMovies(data.results);\n      })\n      .finally(() => setShowLoader(false));\n  };\n\n  // const handleSubmitForm = result => {\n  //   setQuery(result);\n  //   // console.log(result);\n\n  //   getMovieByQueryFromId(result).then(data => {\n  //     // console.log(data);\n  //     setArrayOfMovies(data.results);\n  //   });\n  // };\n\n  return (\n    <div className={s.sectionForm}>\n      {showLoader && <Loader />}\n\n      <Title text=\"Search movies\" />\n      <SearchForm onSubmitForm={handleSubmitForm} />\n      {arrayOfMovies && <MoviesLayout arrayOfMovies={arrayOfMovies} />}\n    </div>\n  );\n};\n\nexport default Movies;\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__DwtSp\"};","import React from 'react';\n\nimport { RotatingLines } from 'react-loader-spinner';\nimport s from './Loader.module.scss';\n\nexport default function Loader() {\n  return (\n    <div className={s.loader}>\n      <RotatingLines\n        visible={true}\n        height=\"200\"\n        width=\"200\"\n        color=\"grey\"\n        strokeWidth=\"3\"\n        animationDuration=\"0.75\"\n        ariaLabel=\"rotating-lines-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n      />\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesLayout_list__L9qoo\",\"listItem\":\"MoviesLayout_listItem__TOMHo\",\"thumbImg\":\"MoviesLayout_thumbImg__+B1p2\",\"imgItem\":\"MoviesLayout_imgItem__1RO77\",\"textLink\":\"MoviesLayout_textLink__YcMR7\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink, Link, useLocation } from 'react-router-dom';\n\nimport s from './MoviesLayout.module.scss';\nimport NoPosterPhoto from '../../images/pngwing.com.png';\n\nexport default function MoviesLayout({ arrayOfMovies }) {\n  //   console.log('arrayOfMovies', arrayOfMovies);\n\n  const location = useLocation();\n  // console.log(location);\n\n  return (\n    <ul className={s.list}>\n      {arrayOfMovies.map(movie => {\n        let nameOfMovie = null;\n        if (movie.title) {\n          nameOfMovie = movie.title;\n        } else {\n          nameOfMovie = movie.name;\n        }\n\n        let poster = NoPosterPhoto;\n        if (movie.poster_path) {\n          poster = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n        }\n\n        return (\n          <li className={s.listItem} key={movie.id}>\n            <Link\n              className={s.linkItem}\n              to={`/movies/${movie.id}`}\n              state={{ from: location }}\n            >\n              <section className={s.thumbImg}>\n                <img\n                  className={s.imgItem}\n                  src={poster}\n                  alt={movie.original_title}\n                />\n              </section>\n            </Link>\n\n            <NavLink\n              className={s.textLink}\n              to={`/movies/${movie.id}`}\n              state={{ from: location }}\n            >\n              {nameOfMovie}\n            </NavLink>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nMoviesLayout.propTypes = {\n  arrayOfMovies: PropTypes.array.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Title_title__IlEm8\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Title.module.scss';\n\nfunction Title({ text }) {\n  return <h1 className={s.title}>{text}</h1>;\n}\n\nTitle.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Title;\n","// const API_KEY = 'fa4880ecea295b97ec0c0697c04c04a1';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmYTQ4ODBlY2VhMjk1Yjk3ZWMwYzA2OTdjMDRjMDRhMSIsInN1YiI6IjY2MjhiZTk5Y2I2ZGI1MDBjYWFkNjYyMSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.dZiO4FGnOBDLSQeO81T0oCwzPEGAndYNnW-ORczZcxw',\n  },\n};\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\n// -- 1\n\n// export const getPopularMoviesFromApi = () => {\n//   const URL = `${BASE_URL}trending/all/day?language=en-US`;\n\n//   return fetch(URL, options)\n//     .then(response => response.json())\n\n//     .catch(err => console.error(err));\n// };\n\nexport const getPopularMoviesFromApi = () => {\n  const URL = `${BASE_URL}movie/popular?language=en-US`;\n\n  return fetch(URL, options)\n    .then(response => response.json())\n\n    .catch(err => console.error(err));\n};\n\n// -- 2\nexport const getMovieDetailsFromApi = movie_Id => {\n  const URL = `${BASE_URL}movie/${movie_Id}?language=en-US`;\n\n  return fetch(URL, options)\n    .then(response => response.json())\n    .catch(error => console.log(error));\n};\n\n// -- 3\nexport const getMovieByQueryFromApi = query => {\n  const URL = `${BASE_URL}search/movie?query=${query}&include_adult=false&language=en-US&page=1`;\n\n  return fetch(URL, options)\n    .then(response => response.json())\n    .catch(error => console.log(error));\n};\n\n// --4\nexport const getMovieCastByFromApi = movie_Id => {\n  const URL = `${BASE_URL}movie/${movie_Id}/credits`;\n\n  return fetch(URL, options)\n    .then(response => response.json())\n    .catch(error => console.log(error));\n};\n\n// -- 5\nexport const getMovieReviewsByFromApi = movie_Id => {\n  const URL = `${BASE_URL}movie/${movie_Id}/reviews`;\n\n  return fetch(URL, options)\n    .then(response => response.json())\n    .catch(error => console.log(error));\n};\n"],"names":["SearchForm","_ref","onSubmitForm","_useState","useState","_useState2","_slicedToArray","query","setQuery","_jsxs","_Fragment","children","_jsx","ToastContainer","className","s","onSubmit","e","preventDefault","trim","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","type","autoComplete","autoFocus","placeholder","value","onChange","target","arrayOfMovies","setArrayOfMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","get","_useState3","_useState4","showLoader","setShowLoader","useEffect","getMovieByQueryFromApi","then","data","results","finally","Loader","Title","text","result","MoviesLayout","RotatingLines","visible","height","width","color","strokeWidth","animationDuration","ariaLabel","wrapperStyle","wrapperClass","location","useLocation","map","movie","nameOfMovie","title","name","poster","NoPosterPhoto","poster_path","concat","Link","to","id","state","from","src","alt","original_title","NavLink","options","method","headers","accept","Authorization","BASE_URL","getPopularMoviesFromApi","URL","fetch","response","json","catch","err","console","error","getMovieDetailsFromApi","movie_Id","log","getMovieCastByFromApi","getMovieReviewsByFromApi"],"sourceRoot":""}